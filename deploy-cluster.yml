---
- hosts: localhost
  tasks:
    #boostrap database
    - name: delete directory for bootstrap ansible-container
      file: path=/tmp/bootstrap/galera state=absent

    - name: create directory for boostrap ansible-containers
      file: path=/tmp/bootstrap/galera state=directory

    - name: init boostrap ansible-container
      shell: "ansible-container init"
      args:
        chdir: /tmp/bootstrap/galera

    - name: write container.yml for boostrap ansible-container
      template: src=templates/bootstrap-container.j2 dest=/tmp/bootstrap/galera/ansible/container.yml

    - name: write main.yml for bootstrap ansible-container
      template: src=templates/bootstrap-main.j2 dest=/tmp/bootstrap/galera/ansible/main.yml
    
    - name: write requirements.yml for boostrap ansible-container
      template: src=templates/requirements.j2 dest=/tmp/bootstrap/galera/ansible/requirements.yml

    - name: build bootstrap ansible-container
      shell: "ansible-container build"
      args:
        chdir: /tmp/bootstrap/galera

    - name: ship bootstrap ansible-container
      shell: "ansible-container shipit openshift --local-images"
      args:
        chdir: /tmp/bootstrap/galera

    - name: login
      shell: "oc login https://10.1.2.2:8443 --token={{ token }} --insecure-skip-tls-verify=true"

    - name: play bootstrap ansible-container
      shell: "ansible-playbook ansible/shipit-openshift.yml"
      args:
        chdir: /tmp/bootstrap/galera

    #TODO: how do we run a container and let it exit and go away so we don't have to do this
    - name: delete bootstrap dc
      shell: "sleep 120 && oc --user=admin --token={{ token }} --server=https://10.1.2.2:8443 -n galera delete dc mariadb-bootstrap"

    #deploy cluster
    - name: delete directory for cluster ansible-container
      file: path=/tmp/deploy/galera state=absent

    - name: create directory for cluster ansible-container
      file: path=/tmp/deploy/galera state=directory

    - name: init cluster ansible-container
      shell: "ansible-container init"
      args:
        chdir: /tmp/deploy/galera

    - name: write container.yml for cluster ansible-container with {{ containers }} containers
      template: src=templates/cluster-container.j2 dest=/tmp/deploy/galera/ansible/container.yml

    - name: write main.yml for cluster ansible-container
      template: src=templates/cluster-main.j2 dest=/tmp/galera/ansible/main.yml
    
    - name: write requirements.yml for cluster ansible-container
      template: src=templates/requirements.j2 dest=/tmp/deploy/galera/ansible/requirements.yml

    - name: build cluster ansible-container
      shell: "ansible-container build"
      args:
        chdir: /tmp/deploy/galera

    - name: ship cluster ansible-container
      shell: "ansible-container shipit openshift --local-images"
      args:
        chdir: /tmp/deploy/galera

    - name: play cluster ansible-container
      shell: "ansible-playbook ansible/shipit-openshift.yml"
      args:
        chdir: /tmp/deploy/galera
