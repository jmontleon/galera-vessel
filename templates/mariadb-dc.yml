apiVersion: v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  labels:
    app: galera
    service: mariadb-{{ item }}
  name: mariadb-{{ item }}
spec:
  replicas: 1
  selector:
    app: galera
    service: mariadb-{{ item }}
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: galera
        service: mariadb-{{ item }}
    spec:
      containers:
      - args:
        - /usr/local/bin/run.sh
        env:
        - name: MARIADB_ROOT_PASSWORD
          value: {{ mariadb_root_password }}
        - name: MARIADB_DATABASE
          value: {{ mariadb_database }}
        - name: MARIADB_PASSWORD
          value: {{ mariadb_password }}
        - name: MARIADB_USERNAME
          value: {{ mariadb_username }}
        - name: WSREP_CLUSTER_ADDRESSES
          value: {{ cluster_string }}
        - name: WSREP_NODE_NAME
          value: mariadb-{{ item }}
        {% if "mariadb-"+item == "mariadb-1" -%}
        - name: WSREP_BOOTSTRAP
          value: --wsrep-new-cluster
        {% endif -%}
        image: "docker.io/jmontleon/centos-7-galera-mariadb-10"
        user: mysql
        imagePullPolicy: IfNotPresent
        name: mariadb-{{ item }}
        ports:
        - containerPort: 3306
          protocol: TCP
        - containerPort: 4567
          protocol: TCP
        - containerPort: 4567
          protocol: UDP
        - containerPort: 4444
          protocol: TCP
        - containerPort: 4568
          protocol: TCP
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mariadb-{{ item }}-data
        workingDir: /
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: mariadb-{{ item }}-data
        persistentVolumeClaim:
          claimName: mariadb-{{ item }}-data
  test: false
  triggers:
  - type: ConfigChange
status: {}
